from sbuildr.dependencies.meta import DependencyMetadata

class DependencyBuilder(object):
    def __init__(self):
        """
        Builds a dependency.
        """
        pass

    # TODO: Make this only install things actually needed by the dependee. 
    def install(self, source_dir: str, header_dir: str, lib_dir: str, exec_dir: str) -> DependencyMetadata:
        """
        Builds a dependency and installs artifacts into the specified directories.

        :param source_dir: A path to a directory containing the source code for this dependency.
        :param header_dir: A path to the output directory for public headers from this dependency.
        :param lib_dir: A path to the output directory for libraries generated by this dependency.
        :param exec_dir: A path to the output directory for executables generated by this dependency.

        :returns: Metadata for this dependency.
        """
        raise NotImplementedError()
